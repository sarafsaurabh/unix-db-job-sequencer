#labels Featured
==1. Introduction==


  * unix-db-job-sequencer is a lightweight script used to sequence (schedule) dependent Unix shell scripts (Jobs) especially useful for running long lasting ETL and Data Warehousing jobs.

  * This script uses tables viz. `job`, `job_dep` and `job_log` created in RDBMS (currently supports only Teradata RDBMS using native BTEQ CLI).

  * This script uses user defined `job` ids and shell script names in `job` table and job dependencies in `job_dep` table to execute dependent jobs in Unix shell.

  * Jobs mentioned in job table are executed based on their dependencies defined in `job_dep` table and log entries are placed in `job_log` table. 


==2. Job Tables Architecture==

===2.1 job Table===

  * Job table consists of a unique user defined job id which identifies a particular Unix Script to be considered for sequencing and job name which specifies the name of the script file.

  * Job table can consist of duplicate (non-unique) job names. (This functionality is provided to allow same Unix script (job) to be executed more than once in a single sequence.)

  * The possible stages in which a job can exist are:

http://lh3.ggpht.com/_f-88X0uUHrw/SwhhdxC7PpI/AAAAAAAACZA/XTs-BdlkHP8/Unix%20JCL_html_m1e582c53.png

===2.2 Job_dep Table===


  * Job table consists of job ids and their dependence on other jobs identified in job_dep_on column.

  * A dependant job is executed only if all of its predecessors are successfully executed without any errors.

  * A null in job_dep_on column signifies that the job is ready to be executed and is independent of any other jobs defined in job table.

  * <font color="red">NOTE: The sequencer will only start if all the jobs defined in job table are present in job_dep table. Independent jobs are added in job_dep table by providing nulls in job_dep_on column</font>

http://lh6.ggpht.com/_f-88X0uUHrw/Swhhd7xegJI/AAAAAAAACY4/HW-RkJKy9xA/Unix%20JCL_html_6cf7204b.png

===2.3 Job_log table===

  * Job_log table consists status of currently executing jobs as well as history.

  * This table includes information pertaining to every single execution of a job in the sequencer. Apart form the job name and job id, it provides start and end time for a job.

  * The possible stages in which a job can exist are: